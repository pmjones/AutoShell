name: "Autoshell CI"

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 02:00 runs only on default branch
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
  pull_request:
  workflow_dispatch:

env:
  fail-fast: true

permissions: { }
jobs:

  # PHP CodeSniffer inspection
  phpstan:
    name: "Validate Code style"
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    permissions:
      contents: read

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: true
      matrix:
        php:
          - '8.1'
          - '8.2'

    steps:
      - uses: actions/checkout@v3

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: session.save_path=/tmp
          tools: pecl
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Install development dependencies with Composer"
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: "--prefer-dist"

      - name: "PHPStan"
        run: |
          composer analyze


  unit-tests:
    needs: phpstan

    permissions:
      contents: read # to fetch code (actions/checkout)

    name: Unit tests / PHP-${{ matrix.php }}-${{ matrix.ts }}-${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        php:
          - '8.1'
          - '8.2'

        include:
          # Linux
          - { name: ubuntu-gcc, os: ubuntu-20.04, compiler: gcc }

    steps:
      - uses: actions/checkout@v3
      - name: "Setup platform specific environment"
        run: |
          git config --global core.autocrlf false

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: session.save_path=${{ env.SESSION_SAVE_PATH }}
          tools: composer:v2
          coverage: xdebug
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Validate composer"
        run: composer validate --no-check-all --no-check-publish

      - name: "Install development dependencies with Composer"
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: "--prefer-dist"

      - name: "Run Unit Tests"
        if: always()
        run: |
            ./vendor/bin/phpunit --coverage-clover=./tmp/clover.xml

#      - name: Upload coverage reports to Codecov
#        uses: "codecov/codecov-action@v3"
#        with:
#          fail_ci_if_error: true
#          token: ${{ secrets.CODECOV_TOKEN }}
#          flags: unittests
#          files: ./tmp/clover.xml
#          verbose: true
